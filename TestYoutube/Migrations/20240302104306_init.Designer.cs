// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TestYoutube.Data;

#nullable disable

namespace TestYoutube.Migrations
{
    [DbContext(typeof(BotYoutubeDbContext))]
    [Migration("20240302104306_init")]
    partial class init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("TestYoutube.Models.ChannelYoutube", b =>
                {
                    b.Property<string>("ChannelId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ChannelTitle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset>("LastCheckDate")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("PlaylistId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ChannelId");

                    b.ToTable("ChannelYoutube");
                });

            modelBuilder.Entity("TestYoutube.Models.UserChannels", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ChannelYoutubeId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ChatIdTelegram")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset>("StartDate")
                        .HasColumnType("datetimeoffset");

                    b.HasKey("Id");

                    b.HasIndex("ChannelYoutubeId");

                    b.ToTable("UserChannels");
                });

            modelBuilder.Entity("TestYoutube.Models.UserChannels", b =>
                {
                    b.HasOne("TestYoutube.Models.ChannelYoutube", "ChannelYoutube")
                        .WithMany("UserChannels")
                        .HasForeignKey("ChannelYoutubeId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("ChannelYoutube");
                });

            modelBuilder.Entity("TestYoutube.Models.ChannelYoutube", b =>
                {
                    b.Navigation("UserChannels");
                });
#pragma warning restore 612, 618
        }
    }
}
